<?xml version="1.0" encoding="UTF-8"?>

<!-- xmlns默认命名空间，spring框架知道怎么解析这个文件，spring还支持自定义的标签，不过需要提供解析实现类 
参考：org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(Element, BeanDefinitionParserDelegate)
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 配置文件中bean标签的spring容器内部表示类是BeanDefinition，并将这些BeanDefinition注册到BeanDefinitionRegistry
	spring容器的BeanDefinitionRegistry就像是这些配置信息的内存数据库，主要是以map的形式保存
	
	xml中的所有配置都可以在GenericBeanDefinition的实例类中找到对应的配置
	  -->
	<bean id="TheAction" name="action1,action2" class="xf.mvc.spring.start.UpperAction">
		<property name="message" >		
			<value>HeLLoWorlD</value>
		</property>
	</bean>
	
	<!-- 通过别名引用同一个数据源而不互相干扰，上面name里的也将作为别名使用 -->
	<alias name="TheAction" alias="action3,action4"/>
	
</beans>